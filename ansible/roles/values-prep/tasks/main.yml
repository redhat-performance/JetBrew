---
- name: get woker node names
  shell: oc get nodes -o jsonpath='{.items[*].metadata.name}'
  register: node_names

- name: set node facts (node_*)
  set_fact:
    "{{ item_name }}": "{{ item }}"
  loop: "{{ node_names.stdout.split() }}"
  loop_control:
    index_var: node_index
  vars:
    item_name: "node_{{ node_index }}"

- name: get the second node macs (2,3 and 4th macs)
  set_fact:
    macs: "{{ ocp_inventry.json.nodes[1].mac[1:4] }}"

- name: get the ip of the first node
  command: >
    oc get nodes -o jsonpath="{range .items[*]}{.status.addresses[?(@.type=='InternalIP')].address}{'\n'}{end}"
  register:
    nodes_ip

- name: set node ip fact
  set_fact:
    "{{ item_name }}": "{{ item }}"
  loop: "{{ nodes_ip.stdout.split() }}"
  loop_control:
    index_var: node_index
  vars:
    item_name: "node_{{ node_index }}_ip" 

- name: fix and setup ssh
  include_tasks: setup-ssh.yml
  loop: "{{ range(0, 3) | list }}"

- name: get the interface names
  include_tasks: get_iface.yml
  loop: "{{ macs | zip(range(macs | length)) | map('list') | list }}"
  loop_control:
    loop_var: item

- name: set the ctlplane gateway ip
  shell:
    ip addr add 172.16.0.1/16 dev {{ iface_0 }}
  become: yes
  ignore_errors: yes

- name: set masquerade for the jump host
  shell: |
    iptables -t nat -A POSTROUTING -s 172.16.0.0/16 -o {{ iface_0 }} -j MASQUERADE

- name: get the common disk accros nodes
  include_tasks: find-node-disks.yml

- name: Render nncp.yaml
  template:
    src: nncp_values.yaml.j2
    dest: "{{ dt_path }}/examples/dt/perfscale/scalelab/networking/nncp/values.yaml"

- name: Render service_values.yaml
  template:
    src: service_values.yaml.j2
    dest: "{{ dt_path }}/examples/dt/perfscale/scalelab/service-values.yaml"

- name: Render service_values_ceph.yaml
  template:
    src: service_values_ceph.yaml.j2
    dest: "{{ dt_path }}/examples/dt/perfscale/scalelab/service-values-ceph.yaml"
  when: ceph_backend | default(false) | bool

- name: Render kustomization.yaml for controlplane
  template:
    src: kustomization.yaml.j2
    dest: "{{ dt_path }}/examples/dt/perfscale/scalelab/kustomization.yaml"

- name: Render lvms value
  template:
    src: lvms-values.yaml.j2
    dest: "{{ dt_path }}/examples/dt/perfscale/scalelab/lvms/lvm-cluster/values.yaml"

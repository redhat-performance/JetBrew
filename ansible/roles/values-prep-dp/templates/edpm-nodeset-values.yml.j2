# yamllint disable rule:line-length
# local-config: referenced, but not emitted by kustomize
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edpm-nodeset-values
  annotations:
    config.kubernetes.io/local-config: "true"
data:
  root_password: cmVkaGF0Cg==
  preProvisioned: true
  baremetalSetTemplate:
    ctlplaneInterface: {{ iface_1 }}
    cloudUserName: cloud-admin
  ssh_keys:
    # Authorized keys that will have access to the dataplane computes via SSH
    # pre-provisioned node don't need this field, it will be removed later.
    authorized: removed
    # The private key that will have access to the dataplane computes via SSH
    private: {{ ssh_private_key }}
    # The public key that will have access to the dataplane computes via SSH
    public: {{ ssh_public_key }}
  nodeset:
    ansible:
      ansibleUser: {{ ssh_username }}
      ansiblePort: 22
      ansibleVars:
        edpm_bootstrap_release_version_package: []
        edpm_bootstrap_command: |
          # root CA
          cd /etc/pki/ca-trust/source/anchors/
          curl -LOk https://certs.corp.redhat.com/RH-IT-Root-CA.crt
          curl -LOk https://certs.corp.redhat.com/certs/2022-IT-Root-CA.pem
          update-ca-trust

          # install rhos-release repos
          dnf --nogpgcheck --repofrompath=rhos-release,http://download.devel.redhat.com/rcm-guest/puddles/OpenStack/rhos-release/ --repo=rhos-release install -y rhos-release
          rhos-release ceph-7.1-rhel-9 -r 9.4

          # Issue #2 - edpm_bootstrap fails if we don't update 'container-selinux'
          dnf update -y

          rpm -ivh --nosignature http://download.devel.redhat.com/rcm-guest/puddles/OpenStack/rhos-release/rhos-release-latest.noarch.rpm
          rhos-release ceph-7.1-rhel-9 -r 9.4
          curl -o /etc/yum.repos.d/delorean.repo https://osp-trunk.hosted.upshift.rdu2.redhat.com/rhel9-osp18/current-podified/delorean.repo
          echo "[osptrunk-candidate-deps]" >> "/etc/yum.repos.d/osptrunk-candidate-deps.repo"
          echo "name=osptrunk-candidate-deps" >> "/etc/yum.repos.d/osptrunk-candidate-deps.repo"
          echo "baseurl=https://download-01.beak-001.prod.iad2.dc.redhat.com/brewroot/repos/rhos-18.0-rhel-9-trunk-candidate/latest/x86_64/" >> "/etc/yum.repos.d/osptrunk-candidate-deps.repo"
          echo "gpgcheck=0" >> /etc/yum.repos.d/osptrunk-candidate-deps.repo
          echo "enabled=1" >> /etc/yum.repos.d/osptrunk-candidate-deps.repo
          echo "priority=1" >> /etc/yum.repos.d/osptrunk-candidate-deps.repo
           # sets up rhoso release repo
          echo "[rhoso-18.0-rhel-9-nightly-compose]" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo
          echo "name=rhoso-18.0-rhel-9-nightly-compose" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo
          echo "baseurl=http://download.hosts.prod.upshift.rdu2.redhat.com/rhel-9/nightly/RHOSO/RHOSO-18.0-trunk/latest-RHOSO_TRUNK-18-RHEL-9/compose/OpenStack/x86_64/os/" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo
          echo "gpgcheck=0" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo
          echo "enabled=1" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo
          echo "priority=1" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo
          echo "includepkgs=rhoso-release-18*" >> /etc/yum.repos.d/rhosotrunk-compose-deps.repo

          sudo dnf install python3-pyroute2 --disableexcludes=all --disablerepo="*" --enablerepo="rhoso-18.0-rhel-9-nightly-compose" -y
        timesync_ntp_servers:
          - hostname: pool.ntp.org
        # edpm_network_config
        # These vars are edpm_network_config role vars
        edpm_network_config_hide_sensitive_logs: false
        edpm_network_config_template: |
          ---
          network_config:
          - type: vlan
            device: {{ iface_1 }}
            vlan_id: 17
            addresses:
{%- raw %}
            - ip_netmask: {{ internalapi_ip }}/{{ internalapi_cidr }}
{% endraw %}
          - type: vlan
            device: {{ iface_2 }}
            vlan_id: 20
            addresses:
{%- raw %}
            - ip_netmask: {{ storage_ip }}/{{ storage_cidr }}
{% endraw %}
          - type: vlan
            device: {{ iface_1 }}
            vlan_id: 18
            addresses:
{%- raw %}
            - ip_netmask: {{ tenant_ip }}/{{ tenant_cidr }}
{% endraw %}
          - type: interface
            name: {{ iface_0 }}
            use_dhcp: false
{%- raw %}
            dns_servers: {{ ctlplane_dns_nameservers }}
            domain: {{ dns_search_domains }}
            addresses:
            - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}
            routes:
            - default: true
              next_hop: {{ ctlplane_gateway_ip }}
          - type: ovs_bridge
            name: br-ex
            use_dhcp: false
            dns_servers: {{ ctlplane_dns_nameservers }}
            domain: {{ dns_search_domains }}
{% endraw %}
            members:
            - type: interface
              name: {{ iface_2 }}
              primary: true
            - type: vlan
              vlan_id: 19
              addresses:
{%- raw %}
              - ip_netmask: {{ external_ip }}/{{ external_cidr }}
{% endraw %}

        # These vars are for the network config templates themselves and are
        # considered EDPM network defaults.
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: {{ iface_2 }}
        # edpm_nodes_validation
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        dns_search_domains: []
        gather_facts: false
        # edpm firewall, change the allowed CIDR if needed
        edpm_sshd_configure_firewall: true
        edpm_sshd_allowed_ranges:
          - 172.16.0.0/16
    networks:
      - defaultRoute: true
        name: ctlplane
        subnetName: subnet1
      - name: internalapi
        subnetName: subnet1
      - name: storage
        subnetName: subnet1
      - name: tenant
        subnetName: subnet1
      - name: external
        subnetName: subnet1
    nodes:
{% for node in edpm_node_list %}
      edpm-{{ node.hostname }}:
        hostName: {{ node.hostname }}
        ansible:
          ansibleHost: {{ node.ip_address }}
          ansibleUser: {{ ssh_username }}
          ansibleVars:
            fqdn_internal_api: {{ node.hostname }}.example.com
{% endfor %}
    services:
      - bootstrap
      - download-cache
      - configure-network
      - reboot-os
      - validate-network
      - install-os
      - configure-os
      - ssh-known-hosts
      - run-os
      - install-certs
      - ovn
      - neutron-ovn
      - neutron-metadata
      - libvirt
      - nova
  nova:
    migration:
      ssh_keys:
        private: {{ nova_migration_private_key }}
        public: {{ nova_migration_public_key }}
